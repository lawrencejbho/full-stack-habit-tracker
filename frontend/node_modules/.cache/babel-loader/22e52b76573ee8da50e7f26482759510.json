{"ast":null,"code":"var _jsxFileName = \"/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit.js\";\nimport React from \"react\";\nimport Plus from \"./Plus.js\";\nimport Minus from \"./Minus.js\";\nimport Delete from \"./Delete.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Habit(props) {\n  // map through the habits to create each one with its unique habit keys\n  const habitElements = props.habits.map((habit, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habit-container\",\n    children: [/*#__PURE__*/_jsxDEV(Plus, {\n      className: \"plus\" // Anytime we mouseOver, we will modify the currentHabitID so that we can update the counter when it is clicked\n      // it looks like you need to an arrow function anytime you are passing a parameter to an event handler or callback\n      // this is equivalent to using a .bind\n      ,\n      mouseOver: () => props.setCurrentHabitId(habit.id),\n      plusClick: props.plusCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habit\",\n      children: [habit.counter, \" \", habit.body, /*#__PURE__*/_jsxDEV(Delete, {\n        mouseOver: () => props.setCurrentHabitId(habit.id),\n        deleteClick: props.deleteHabit,\n        contributions: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Minus, {\n      className: \"minus\",\n      mouseOver: () => props.setCurrentHabitId(habit.id),\n      minusClick: props.minusCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, habit.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)); // ? honestly not show what this div habit group does or if I even need it\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habit-group\",\n    children: habitElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Habit;\nexport default Habit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Habit\");","map":{"version":3,"names":["React","Plus","Minus","Delete","Habit","props","habitElements","habits","map","habit","index","setCurrentHabitId","id","plusCounter","counter","body","deleteHabit","minusCounter"],"sources":["/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit.js"],"sourcesContent":["import React from \"react\";\nimport Plus from \"./Plus.js\";\nimport Minus from \"./Minus.js\";\nimport Delete from \"./Delete.js\";\n\nfunction Habit(props) {\n  // map through the habits to create each one with its unique habit keys\n  const habitElements = props.habits.map((habit, index) => (\n    <div key={habit.id} className=\"habit-container\">\n      <Plus\n        className=\"plus\"\n        // Anytime we mouseOver, we will modify the currentHabitID so that we can update the counter when it is clicked\n        // it looks like you need to an arrow function anytime you are passing a parameter to an event handler or callback\n        // this is equivalent to using a .bind\n        mouseOver={() => props.setCurrentHabitId(habit.id)}\n        plusClick={props.plusCounter}\n      />\n\n      <div className=\"habit\">\n        {habit.counter} {habit.body}\n        <Delete\n          mouseOver={() => props.setCurrentHabitId(habit.id)}\n          deleteClick={props.deleteHabit}\n          contributions=\"5\"\n        />\n        <button className=\"delete-btn\"></button>\n      </div>\n      <Minus\n        className=\"minus\"\n        mouseOver={() => props.setCurrentHabitId(habit.id)}\n        minusClick={props.minusCounter}\n      />\n    </div>\n  ));\n\n  // ? honestly not show what this div habit group does or if I even need it\n  return <div className=\"habit-group\">{habitElements}</div>;\n}\n\nexport default Habit;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB;EACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,kBACrC;IAAoB,SAAS,EAAC,iBAA9B;IAAA,wBACE,QAAC,IAAD;MACE,SAAS,EAAC,MADZ,CAEE;MACA;MACA;MAJF;MAKE,SAAS,EAAE,MAAML,KAAK,CAACM,iBAAN,CAAwBF,KAAK,CAACG,EAA9B,CALnB;MAME,SAAS,EAAEP,KAAK,CAACQ;IANnB;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAK,SAAS,EAAC,OAAf;MAAA,WACGJ,KAAK,CAACK,OADT,OACmBL,KAAK,CAACM,IADzB,eAEE,QAAC,MAAD;QACE,SAAS,EAAE,MAAMV,KAAK,CAACM,iBAAN,CAAwBF,KAAK,CAACG,EAA9B,CADnB;QAEE,WAAW,EAAEP,KAAK,CAACW,WAFrB;QAGE,aAAa,EAAC;MAHhB;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE;QAAQ,SAAS,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,eAmBE,QAAC,KAAD;MACE,SAAS,EAAC,OADZ;MAEE,SAAS,EAAE,MAAMX,KAAK,CAACM,iBAAN,CAAwBF,KAAK,CAACG,EAA9B,CAFnB;MAGE,UAAU,EAAEP,KAAK,CAACY;IAHpB;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA,GAAUR,KAAK,CAACG,EAAhB;IAAA;IAAA;IAAA;EAAA,QADoB,CAAtB,CAFoB,CA8BpB;;EACA,oBAAO;IAAK,SAAS,EAAC,aAAf;IAAA,UAA8BN;EAA9B;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAhCQF,K;AAkCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}