{"ast":null,"code":"var _jsxFileName = \"/home/lawrence/Projects/habit-tracker/frontend/src/pages/HabitTracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Habit from \"../components/Habit.js\";\nimport Add from \"../components/Add.js\";\nimport { nanoid } from \"nanoid\";\nimport TodayDate from \"../components/TodayDate.js\";\nimport ContributionGraph from \"../components/ContributionGraph.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HabitTracker() {\n  _s();\n\n  // need to define localStorage here to grab the key habits\n  const savedHabit = localStorage.getItem(\"habits\"); // our habits array that saves our habits to be displayed later, will use the localStorage if it exists\n\n  const [habits, setHabits] = useState(() => JSON.parse(savedHabit) || []); // this help us track the current Habit Id, allows us to very easily track a Habit based on the ID when we use things like mouseOver\n\n  const [currentHabitId, setCurrentHabitId] = useState(habits[0] && habits[0].id || \"\"); // useEffect will track any changes to habits array and modify the value in localStorage\n\n  useEffect(() => {\n    localStorage.setItem(\"habits\", JSON.stringify(habits));\n  }, [habits]); // checks for the proper ID and will increment it's counter value by 1\n\n  function plusCounter() {\n    setHabits(prevHabits => prevHabits.map(prevHabit => {\n      return prevHabit.id === currentHabitId ? { ...prevHabit,\n        counter: prevHabit.counter + 1\n      } : prevHabit;\n    }));\n  }\n\n  function minusCounter() {\n    setHabits(prevHabits => prevHabits.map(prevHabit => {\n      return prevHabit.id === currentHabitId ? { ...prevHabit,\n        counter: prevHabit.counter - 1\n      } : prevHabit;\n    }));\n  } // console.log(habits);\n  // Pass this function to Add, it will pass us back the specific Habit so we can add the new habit into our Habits array\n\n\n  function addHabit(newHabit) {\n    setHabits(prevHabits => {\n      return [...prevHabits, newHabit];\n    });\n  } // Use filter to keep everything but the currentHabitId which comes when we mouseOver\n\n\n  function deleteHabit() {\n    setHabits(prevHabits => prevHabits.filter(habit => habit.id !== currentHabitId));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(Add, {\n          onAdd: addHabit,\n          setCurrentHabitId: setCurrentHabitId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Habit, {\n          habits: habits,\n          plusCounter: plusCounter,\n          minusCounter: minusCounter,\n          deleteHabit: deleteHabit,\n          setCurrentHabitId: setCurrentHabitId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodayDate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContributionGraph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HabitTracker, \"J9RSWWfvDXAshShajyFsUxMiYcQ=\");\n\n_c = HabitTracker;\nexport default HabitTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"HabitTracker\");","map":{"version":3,"names":["React","useState","useEffect","Habit","Add","nanoid","TodayDate","ContributionGraph","HabitTracker","savedHabit","localStorage","getItem","habits","setHabits","JSON","parse","currentHabitId","setCurrentHabitId","id","setItem","stringify","plusCounter","prevHabits","map","prevHabit","counter","minusCounter","addHabit","newHabit","deleteHabit","filter","habit"],"sources":["/home/lawrence/Projects/habit-tracker/frontend/src/pages/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Habit from \"../components/Habit.js\";\r\nimport Add from \"../components/Add.js\";\r\nimport { nanoid } from \"nanoid\";\r\nimport TodayDate from \"../components/TodayDate.js\";\r\nimport ContributionGraph from \"../components/ContributionGraph.js\";\r\n\r\nfunction HabitTracker() {\r\n  // need to define localStorage here to grab the key habits\r\n  const savedHabit = localStorage.getItem(\"habits\");\r\n\r\n  // our habits array that saves our habits to be displayed later, will use the localStorage if it exists\r\n  const [habits, setHabits] = useState(() => JSON.parse(savedHabit) || []);\r\n\r\n  // this help us track the current Habit Id, allows us to very easily track a Habit based on the ID when we use things like mouseOver\r\n  const [currentHabitId, setCurrentHabitId] = useState(\r\n    (habits[0] && habits[0].id) || \"\"\r\n  );\r\n\r\n  // useEffect will track any changes to habits array and modify the value in localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"habits\", JSON.stringify(habits));\r\n  }, [habits]);\r\n\r\n  // checks for the proper ID and will increment it's counter value by 1\r\n  function plusCounter() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.map((prevHabit) => {\r\n        return prevHabit.id === currentHabitId\r\n          ? { ...prevHabit, counter: prevHabit.counter + 1 }\r\n          : prevHabit;\r\n      })\r\n    );\r\n  }\r\n\r\n  function minusCounter() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.map((prevHabit) => {\r\n        return prevHabit.id === currentHabitId\r\n          ? { ...prevHabit, counter: prevHabit.counter - 1 }\r\n          : prevHabit;\r\n      })\r\n    );\r\n  }\r\n\r\n  // console.log(habits);\r\n\r\n  // Pass this function to Add, it will pass us back the specific Habit so we can add the new habit into our Habits array\r\n  function addHabit(newHabit) {\r\n    setHabits((prevHabits) => {\r\n      return [...prevHabits, newHabit];\r\n    });\r\n  }\r\n\r\n  // Use filter to keep everything but the currentHabitId which comes when we mouseOver\r\n  function deleteHabit() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.filter((habit) => habit.id !== currentHabitId)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <div className=\"card-container\">\r\n          <Add onAdd={addHabit} setCurrentHabitId={setCurrentHabitId} />\r\n          <Habit\r\n            habits={habits}\r\n            plusCounter={plusCounter}\r\n            minusCounter={minusCounter}\r\n            deleteHabit={deleteHabit}\r\n            setCurrentHabitId={setCurrentHabitId}\r\n          />\r\n          <TodayDate />\r\n        </div>\r\n      </main>\r\n      <ContributionGraph />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HabitTracker;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACtB;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAnB,CAFsB,CAItB;;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,MAAMa,IAAI,CAACC,KAAL,CAAWN,UAAX,KAA0B,EAAjC,CAApC,CALsB,CAOtB;;EACA,MAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CACjDW,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUM,EAAxB,IAA+B,EADmB,CAApD,CARsB,CAYtB;;EACAhB,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA+BL,IAAI,CAACM,SAAL,CAAeR,MAAf,CAA/B;EACD,CAFQ,EAEN,CAACA,MAAD,CAFM,CAAT,CAbsB,CAiBtB;;EACA,SAASS,WAAT,GAAuB;IACrBR,SAAS,CAAES,UAAD,IACRA,UAAU,CAACC,GAAX,CAAgBC,SAAD,IAAe;MAC5B,OAAOA,SAAS,CAACN,EAAV,KAAiBF,cAAjB,GACH,EAAE,GAAGQ,SAAL;QAAgBC,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB;MAA7C,CADG,GAEHD,SAFJ;IAGD,CAJD,CADO,CAAT;EAOD;;EAED,SAASE,YAAT,GAAwB;IACtBb,SAAS,CAAES,UAAD,IACRA,UAAU,CAACC,GAAX,CAAgBC,SAAD,IAAe;MAC5B,OAAOA,SAAS,CAACN,EAAV,KAAiBF,cAAjB,GACH,EAAE,GAAGQ,SAAL;QAAgBC,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB;MAA7C,CADG,GAEHD,SAFJ;IAGD,CAJD,CADO,CAAT;EAOD,CApCqB,CAsCtB;EAEA;;;EACA,SAASG,QAAT,CAAkBC,QAAlB,EAA4B;IAC1Bf,SAAS,CAAES,UAAD,IAAgB;MACxB,OAAO,CAAC,GAAGA,UAAJ,EAAgBM,QAAhB,CAAP;IACD,CAFQ,CAAT;EAGD,CA7CqB,CA+CtB;;;EACA,SAASC,WAAT,GAAuB;IACrBhB,SAAS,CAAES,UAAD,IACRA,UAAU,CAACQ,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACb,EAAN,KAAaF,cAA1C,CADO,CAAT;EAGD;;EAED,oBACE;IAAA,wBACE;MAAA,uBACE;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE,QAAC,GAAD;UAAK,KAAK,EAAEW,QAAZ;UAAsB,iBAAiB,EAAEV;QAAzC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UACE,MAAM,EAAEL,MADV;UAEE,WAAW,EAAES,WAFf;UAGE,YAAY,EAAEK,YAHhB;UAIE,WAAW,EAAEG,WAJf;UAKE,iBAAiB,EAAEZ;QALrB;UAAA;UAAA;UAAA;QAAA,QAFF,eASE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAcE,QAAC,iBAAD;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA,gBADF;AAkBD;;GAxEQT,Y;;KAAAA,Y;AA0ET,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}