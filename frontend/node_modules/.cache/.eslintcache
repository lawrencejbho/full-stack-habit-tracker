[{"/home/lawrence/Projects/habit-tracker/frontend/src/index.js":"1","/home/lawrence/Projects/habit-tracker/frontend/src/App.js":"2","/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit.js":"3","/home/lawrence/Projects/habit-tracker/frontend/src/components/TodayDate.js":"4","/home/lawrence/Projects/habit-tracker/frontend/src/components/ContributionGraph.js":"5","/home/lawrence/Projects/habit-tracker/frontend/src/components/Plus.js":"6","/home/lawrence/Projects/habit-tracker/frontend/src/components/Minus.js":"7","/home/lawrence/Projects/habit-tracker/frontend/src/components/Box.js":"8","/home/lawrence/Projects/habit-tracker/frontend/src/components/FakeData.js":"9","/home/lawrence/Projects/habit-tracker/frontend/src/pages/HabitTracker.js":"10","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Navbar.js":"11","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Home.js":"12","/home/lawrence/Projects/habit-tracker/frontend/src/pages/NotFound.js":"13","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Pomodoro.js":"14","/home/lawrence/Projects/habit-tracker/frontend/src/components/Weather.js":"15","/home/lawrence/Projects/habit-tracker/frontend/src/pages/PomodoroTimer.js":"16","/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit-Add.js":"17","/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit-Delete.js":"18"},{"size":211,"mtime":1663994391470,"results":"19","hashOfConfig":"20"},{"size":1105,"mtime":1664413752240,"results":"21","hashOfConfig":"20"},{"size":2689,"mtime":1665547626050,"results":"22","hashOfConfig":"20"},{"size":748,"mtime":1664413752240,"results":"23","hashOfConfig":"20"},{"size":3643,"mtime":1665530781010,"results":"24","hashOfConfig":"20"},{"size":318,"mtime":1664413752240,"results":"25","hashOfConfig":"20"},{"size":327,"mtime":1664413752240,"results":"26","hashOfConfig":"20"},{"size":873,"mtime":1665020434700,"results":"27","hashOfConfig":"20"},{"size":22160,"mtime":1664996505380,"results":"28","hashOfConfig":"20"},{"size":3759,"mtime":1665550952800,"results":"29","hashOfConfig":"20"},{"size":803,"mtime":1664413752240,"results":"30","hashOfConfig":"20"},{"size":485,"mtime":1664912714160,"results":"31","hashOfConfig":"20"},{"size":341,"mtime":1664413752240,"results":"32","hashOfConfig":"20"},{"size":8972,"mtime":1665548597990,"results":"33","hashOfConfig":"20"},{"size":2028,"mtime":1665170893420,"results":"34","hashOfConfig":"20"},{"size":1225,"mtime":1664993676630,"results":"35","hashOfConfig":"20"},{"size":2036,"mtime":1665549576710,"results":"36","hashOfConfig":"20"},{"size":354,"mtime":1664413752240,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1w3m9ng",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lawrence/Projects/habit-tracker/frontend/src/index.js",[],[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/App.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/TodayDate.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/ContributionGraph.js",["95","96","97","98"],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Plus.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Minus.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Box.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/FakeData.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/HabitTracker.js",["99"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Habit from \"../components/Habit.js\";\r\nimport HabitAdd from \"../components/Habit-Add.js\";\r\nimport TodayDate from \"../components/TodayDate.js\";\r\nimport ContributionGraph from \"../components/ContributionGraph.js\";\r\n\r\nfunction HabitTracker() {\r\n  // need to define localStorage here to grab the key habits\r\n  // const savedHabit = localStorage.getItem(\"habits\");\r\n\r\n  const [habitDatabase, setHabitDatabase] = useState([{}]);\r\n\r\n  // our habits array that saves our habits to be displayed later, will use the localStorage if it exists\r\n  const [habits, setHabits] = useState([]);\r\n\r\n  // this help us track the current Habit Id, allows us to very easily track a Habit based on the ID when we use things like mouseOver\r\n  const [currentHabitId, setCurrentHabitId] = useState(\r\n    (habits[0] && habits[0].id) || \"\"\r\n  );\r\n\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  // useEffect will track any changes to habits array and modify the value in localStorage\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"habits\", JSON.stringify(habits));\r\n  // }, [habits]);\r\n\r\n  // checks for the proper ID and will increment it's counter value by 1\r\n  function plusCounter() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.map((prevHabit) => {\r\n        return prevHabit.id === currentHabitId\r\n          ? { ...prevHabit, counter: prevHabit.counter + 1 }\r\n          : prevHabit;\r\n      })\r\n    );\r\n  }\r\n\r\n  function minusCounter() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.map((prevHabit) => {\r\n        return prevHabit.id === currentHabitId\r\n          ? { ...prevHabit, counter: prevHabit.counter - 1 }\r\n          : prevHabit;\r\n      })\r\n    );\r\n  }\r\n\r\n  // console.log(habits);\r\n\r\n  // this only needs to help with a render now and then we'll call our database again to update our habits\r\n  function addHabit(newHabit) {\r\n    setHabitDatabase((prevHabits) => {\r\n      return [...prevHabits, newHabit];\r\n    });\r\n    setIsReady((prevValue) => !prevValue);\r\n  }\r\n\r\n  // Use filter to keep everything but the currentHabitId which comes when we mouseOver\r\n  function deleteHabit() {\r\n    // remove the habit in state first then remove in database, this will make the website look a lot more snappy\r\n    setHabitDatabase((prevHabits) =>\r\n      prevHabits.filter((habit) => habit.id !== currentHabitId)\r\n    );\r\n\r\n    async function deleteHabitInDatabase() {\r\n      let data = {\r\n        id: currentHabitId,\r\n      };\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      };\r\n\r\n      // don't really need this promise for anything, but will leave it here for now\r\n      fetch(\"/api/habit-delete\", requestOptions).then((response) => {\r\n        return response.json();\r\n      });\r\n    }\r\n    deleteHabitInDatabase();\r\n    // helps with a render\r\n    setIsReady((prevValue) => !prevValue);\r\n  }\r\n\r\n  // query habits from database\r\n  useEffect(() => {\r\n    const getHabits = async () => {\r\n      const data = await fetch(\"/api/habit-get\");\r\n      const get_data = await data.json();\r\n      console.log(get_data);\r\n      setHabitDatabase(get_data);\r\n    };\r\n    getHabits();\r\n  }, [isReady]);\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <div className=\"card-container\">\r\n          <HabitAdd onAdd={addHabit} setCurrentHabitId={setCurrentHabitId} />\r\n          <Habit\r\n            habits={habitDatabase}\r\n            plusCounter={plusCounter}\r\n            minusCounter={minusCounter}\r\n            deleteHabit={deleteHabit}\r\n            setCurrentHabitId={setCurrentHabitId}\r\n          />\r\n          <TodayDate />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HabitTracker;\r\n","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Navbar.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/Home.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/NotFound.js",["100"],[],"import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NotFound() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      navigate(\"/\");\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Not Found</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Pomodoro.js",["101"],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Weather.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/PomodoroTimer.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit-Add.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit-Delete.js",[],[],{"ruleId":"102","severity":1,"message":"103","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":38,"column":6,"nodeType":"108","endLine":38,"endColumn":37,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":53,"column":29,"nodeType":"112","messageId":"113","endLine":53,"endColumn":31},{"ruleId":"114","severity":1,"message":"115","line":92,"column":15,"nodeType":"116","messageId":"117","endLine":92,"endColumn":22},{"ruleId":"102","severity":1,"message":"118","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":25},{"ruleId":"106","severity":1,"message":"119","line":11,"column":6,"nodeType":"108","endLine":11,"endColumn":8,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"121","line":129,"column":6,"nodeType":"108","endLine":129,"endColumn":35,"suggestions":"122"},"no-unused-vars","'isPropsReady' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'determineDateByPomodoro'. Either include it or remove the dependency array.","ArrayExpression",["123"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'ContributionGraph' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'resetPomodoro'. Either include it or remove the dependency array.",["125"],{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [props.pomodoros, pomodoroData, determineDateByPomodoro]",{"range":"132","text":"133"},"Update the dependencies array to be: [navigate]",{"range":"134","text":"135"},"Update the dependencies array to be: [isBreakActive, resetPomodoro, secondsBreak]",{"range":"136","text":"137"},[1217,1248],"[props.pomodoros, pomodoroData, determineDateByPomodoro]",[241,243],"[navigate]",[4634,4663],"[isBreakActive, resetPomodoro, secondsBreak]"]