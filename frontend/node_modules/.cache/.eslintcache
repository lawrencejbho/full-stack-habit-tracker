[{"/home/lawrence/Projects/habit-tracker/frontend/src/index.js":"1","/home/lawrence/Projects/habit-tracker/frontend/src/App.js":"2","/home/lawrence/Projects/habit-tracker/frontend/src/components/Add.js":"3","/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit.js":"4","/home/lawrence/Projects/habit-tracker/frontend/src/components/TodayDate.js":"5","/home/lawrence/Projects/habit-tracker/frontend/src/components/ContributionGraph.js":"6","/home/lawrence/Projects/habit-tracker/frontend/src/components/Plus.js":"7","/home/lawrence/Projects/habit-tracker/frontend/src/components/Minus.js":"8","/home/lawrence/Projects/habit-tracker/frontend/src/components/Delete.js":"9","/home/lawrence/Projects/habit-tracker/frontend/src/components/Box.js":"10","/home/lawrence/Projects/habit-tracker/frontend/src/components/FakeData.js":"11","/home/lawrence/Projects/habit-tracker/frontend/src/pages/HabitTracker.js":"12","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Navbar.js":"13","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Home.js":"14","/home/lawrence/Projects/habit-tracker/frontend/src/pages/NotFound.js":"15","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Pomodoro.js":"16","/home/lawrence/Projects/habit-tracker/frontend/src/components/Weather.js":"17","/home/lawrence/Projects/habit-tracker/frontend/src/pages/PomodoroTimer.js":"18"},{"size":211,"mtime":1663994391470,"results":"19","hashOfConfig":"20"},{"size":1105,"mtime":1664413752240,"results":"21","hashOfConfig":"20"},{"size":1140,"mtime":1663994391390,"results":"22","hashOfConfig":"20"},{"size":1388,"mtime":1663994391390,"results":"23","hashOfConfig":"20"},{"size":748,"mtime":1664413752240,"results":"24","hashOfConfig":"20"},{"size":491,"mtime":1664413752240,"results":"25","hashOfConfig":"20"},{"size":318,"mtime":1664413752240,"results":"26","hashOfConfig":"20"},{"size":327,"mtime":1664413752240,"results":"27","hashOfConfig":"20"},{"size":354,"mtime":1664413752240,"results":"28","hashOfConfig":"20"},{"size":873,"mtime":1663994391390,"results":"29","hashOfConfig":"20"},{"size":22174,"mtime":1663994391390,"results":"30","hashOfConfig":"20"},{"size":2669,"mtime":1664413752240,"results":"31","hashOfConfig":"20"},{"size":803,"mtime":1664413752240,"results":"32","hashOfConfig":"20"},{"size":485,"mtime":1664842739490,"results":"33","hashOfConfig":"20"},{"size":341,"mtime":1664413752240,"results":"34","hashOfConfig":"20"},{"size":5722,"mtime":1664842739490,"results":"35","hashOfConfig":"20"},{"size":2025,"mtime":1664900514230,"results":"36","hashOfConfig":"20"},{"size":1225,"mtime":1664842739490,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1w3m9ng",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"41"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/home/lawrence/Projects/habit-tracker/frontend/src/index.js",[],[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/App.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Add.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Habit.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/TodayDate.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/ContributionGraph.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Plus.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Minus.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Delete.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/Box.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/components/FakeData.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/HabitTracker.js",["96"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Habit from \"../components/Habit.js\";\r\nimport Add from \"../components/Add.js\";\r\nimport { nanoid } from \"nanoid\";\r\nimport TodayDate from \"../components/TodayDate.js\";\r\nimport ContributionGraph from \"../components/ContributionGraph.js\";\r\n\r\nfunction HabitTracker() {\r\n  // need to define localStorage here to grab the key habits\r\n  const savedHabit = localStorage.getItem(\"habits\");\r\n\r\n  // our habits array that saves our habits to be displayed later, will use the localStorage if it exists\r\n  const [habits, setHabits] = useState(() => JSON.parse(savedHabit) || []);\r\n\r\n  // this help us track the current Habit Id, allows us to very easily track a Habit based on the ID when we use things like mouseOver\r\n  const [currentHabitId, setCurrentHabitId] = useState(\r\n    (habits[0] && habits[0].id) || \"\"\r\n  );\r\n\r\n  // useEffect will track any changes to habits array and modify the value in localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"habits\", JSON.stringify(habits));\r\n  }, [habits]);\r\n\r\n  // checks for the proper ID and will increment it's counter value by 1\r\n  function plusCounter() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.map((prevHabit) => {\r\n        return prevHabit.id === currentHabitId\r\n          ? { ...prevHabit, counter: prevHabit.counter + 1 }\r\n          : prevHabit;\r\n      })\r\n    );\r\n  }\r\n\r\n  function minusCounter() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.map((prevHabit) => {\r\n        return prevHabit.id === currentHabitId\r\n          ? { ...prevHabit, counter: prevHabit.counter - 1 }\r\n          : prevHabit;\r\n      })\r\n    );\r\n  }\r\n\r\n  // console.log(habits);\r\n\r\n  // Pass this function to Add, it will pass us back the specific Habit so we can add the new habit into our Habits array\r\n  function addHabit(newHabit) {\r\n    setHabits((prevHabits) => {\r\n      return [...prevHabits, newHabit];\r\n    });\r\n  }\r\n\r\n  // Use filter to keep everything but the currentHabitId which comes when we mouseOver\r\n  function deleteHabit() {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.filter((habit) => habit.id !== currentHabitId)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <div className=\"card-container\">\r\n          <Add onAdd={addHabit} setCurrentHabitId={setCurrentHabitId} />\r\n          <Habit\r\n            habits={habits}\r\n            plusCounter={plusCounter}\r\n            minusCounter={minusCounter}\r\n            deleteHabit={deleteHabit}\r\n            setCurrentHabitId={setCurrentHabitId}\r\n          />\r\n          <TodayDate />\r\n        </div>\r\n      </main>\r\n      <ContributionGraph />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HabitTracker;\r\n","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Navbar.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/Home.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/NotFound.js",["97"],[],"import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NotFound() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      navigate(\"/\");\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Not Found</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","/home/lawrence/Projects/habit-tracker/frontend/src/pages/Pomodoro.js",["98"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PomodoroTimer from \"./PomodoroTimer.js\";\r\nimport \"./pomodoro.css\";\r\n\r\nfunction Pomodoro() {\r\n  const [secondsPomodoro, setSecondsPomodoro] = useState(2);\r\n  const [secondsBreak, setSecondsBreak] = useState(2);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isBreakActive, setIsBreakActive] = useState(false);\r\n  const pomodoroTimeDisplay = timeConversion(secondsPomodoro);\r\n  const breakTimeDisplay = timeConversion(secondsBreak);\r\n\r\n  // let isPomodoro = false;\r\n\r\n  // not sure if this is the proper way to do this but I leave seconds as the state variable and use a normal variable that uses seconds with derived state\r\n  function timeConversion(seconds) {\r\n    let time = {};\r\n    if (seconds > 0) {\r\n      time = {\r\n        minutes:\r\n          Math.floor(seconds / 60) > 10\r\n            ? Math.floor(seconds / 60)\r\n            : `0${Math.floor(seconds / 60)}`,\r\n        seconds: seconds % 60 >= 10 ? seconds % 60 : `0${seconds % 60}`,\r\n      };\r\n    } else if (seconds === 0) {\r\n      time = {\r\n        minutes: \"00\",\r\n        seconds: \"00\",\r\n      };\r\n    }\r\n    return time;\r\n  }\r\n\r\n  // first useEffect for the Pomodoro timer\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    // local notification\r\n    function notificationPermissionPomodoro() {\r\n      Notification.requestPermission().then((perm) => {\r\n        if (perm === \"granted\") {\r\n          const notification = new Notification(\"Pomodoro Finished\", {\r\n            body: \"Start Break?\",\r\n            data: { test: \"Data\" },\r\n            icon: \"mango.png\",\r\n          });\r\n          // click the notification to immediately start break\r\n          notification.addEventListener(\"click\", (e) => {\r\n            // console.log(e);\r\n            resetBreak();\r\n            toggleBreak();\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (isActive && secondsPomodoro !== 0) {\r\n      interval = setInterval(() => {\r\n        setSecondsPomodoro((seconds) => seconds - 1);\r\n      }, 1000);\r\n    } else if (!isActive && secondsPomodoro !== 0) {\r\n      clearInterval(interval);\r\n    } else if (isActive && secondsPomodoro === 0) {\r\n      // need to check isActive here or you'll get two notifications\r\n      setIsActive(false);\r\n      notificationPermissionPomodoro();\r\n    }\r\n    return () => clearInterval(interval); // return clearInterval for clean up\r\n  }, [isActive, secondsPomodoro]); // need isActive here in the dependency array to start the useEffect or secondsPomodoro will never go down\r\n\r\n  // second useEffect for the Break timer, almost exactly the same\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    // local notifications for Break finished\r\n    function notificationPermissionBreak() {\r\n      Notification.requestPermission().then((perm) => {\r\n        if (perm === \"granted\") {\r\n          const notification = new Notification(\"Break Finished\", {\r\n            body: \"Start Focusing?\",\r\n            data: { test: \"Data\" },\r\n            icon: \"mango.png\",\r\n          });\r\n          // click the notification to immediately start break\r\n          notification.addEventListener(\"click\", (e) => {\r\n            // console.log(e);\r\n            resetPomodoro();\r\n            resetBreak();\r\n            togglePomodoro();\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (isBreakActive && secondsBreak !== 0) {\r\n      interval = setInterval(() => {\r\n        setSecondsBreak((seconds) => seconds - 1);\r\n      }, 1000);\r\n    } else if (!isBreakActive && secondsBreak !== 0) {\r\n      clearInterval(interval);\r\n    } else if (isBreakActive && secondsBreak === 0) {\r\n      setIsBreakActive(false);\r\n      notificationPermissionBreak();\r\n    }\r\n    return () => clearInterval(interval); // return clearInterval for clean up\r\n  }, [isBreakActive, secondsBreak]);\r\n\r\n  function togglePomodoro() {\r\n    setIsActive((prev) => !prev);\r\n  }\r\n\r\n  function toggleBreak() {\r\n    setIsBreakActive((prev) => !prev);\r\n  }\r\n\r\n  function resetPomodoro() {\r\n    setSecondsPomodoro(1500);\r\n    if (!isBreakActive) setSecondsBreak(300);\r\n    setIsActive(false);\r\n    // isPomodoro = false;\r\n  }\r\n\r\n  function resetBreak() {\r\n    setSecondsBreak(300);\r\n    setIsBreakActive(false);\r\n  }\r\n\r\n  // this seems to work for which one to display, I also tried checking for isActive but it didn't work as intended\r\n  function startOrResumePomodoro() {\r\n    if (secondsPomodoro === 1500) {\r\n      return \"Start\";\r\n    } else if (secondsPomodoro === 0) {\r\n      return \"Reset\";\r\n    } else {\r\n      return \"Resume\";\r\n    }\r\n  }\r\n  function startOrResumeBreak() {\r\n    if (secondsBreak === 300) {\r\n      return \"Start\";\r\n    } else if (secondsBreak === 0) {\r\n      return \"Reset\";\r\n    } else {\r\n      return \"Resume\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"white-text\">Pomodoro</h1>\r\n      <hr className=\"app-line\"></hr>\r\n      <div className=\"timer-container\">\r\n        <PomodoroTimer\r\n          minutes={pomodoroTimeDisplay.minutes}\r\n          seconds={pomodoroTimeDisplay.seconds}\r\n          activePomodoro={isActive}\r\n          activeBreak={isBreakActive}\r\n          active={isActive}\r\n          toggle={togglePomodoro}\r\n          reset={resetPomodoro}\r\n          startOrResume={startOrResumePomodoro}\r\n          type=\"pomodoro\"\r\n        />\r\n        <PomodoroTimer\r\n          minutes={breakTimeDisplay.minutes}\r\n          seconds={breakTimeDisplay.seconds}\r\n          activePomodoro={isActive}\r\n          activeBreak={isBreakActive}\r\n          active={isBreakActive}\r\n          toggle={toggleBreak}\r\n          reset={resetBreak}\r\n          startOrResume={startOrResumeBreak}\r\n          type=\"break\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","/home/lawrence/Projects/habit-tracker/frontend/src/components/Weather.js",[],[],"/home/lawrence/Projects/habit-tracker/frontend/src/pages/PomodoroTimer.js",[],[],{"ruleId":"99","severity":1,"message":"100","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":11,"column":6,"nodeType":"105","endLine":11,"endColumn":8,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":107,"column":6,"nodeType":"105","endLine":107,"endColumn":35,"suggestions":"108"},"no-unused-vars","'nanoid' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'resetPomodoro'. Either include it or remove the dependency array.",["110"],{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [navigate]",{"range":"115","text":"116"},"Update the dependencies array to be: [isBreakActive, resetPomodoro, secondsBreak]",{"range":"117","text":"118"},[241,243],"[navigate]",[3781,3810],"[isBreakActive, resetPomodoro, secondsBreak]"]